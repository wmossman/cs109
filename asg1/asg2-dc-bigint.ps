%!PS-Adobe-3.0
%%Creator: groff version 1.22.2
%%CreationDate: Mon Jan 18 03:06:17 2016
%%Title: asg2-dc-bigint.ps
%%BoundingBox: 0 0 612 792
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font NewCenturySchlbk-Bold
%%+ font NewCenturySchlbk-Roman
%%+ font NewCenturySchlbk-Italic
%%+ font Symbol
%%DocumentSuppliedResources: procset grops 1.22 2
%%+ font Courier-Elite-Bold
%%+ font Courier-Elite
%%Pages: 4
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 2
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Bold
%%IncludeResource: font NewCenturySchlbk-Bold
%%IncludeResource: font NewCenturySchlbk-Roman
%%IncludeResource: font NewCenturySchlbk-Italic
%%IncludeResource: font Symbol
%%BeginResource: font Courier-Elite-Bold
%%DocumentNeededResources: font Courier-Bold
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Courier-Elite-Bold
[ .833333333 0 0 1 0 0 ]
/Courier-Bold
MakeTransformedFont
%%EndResource
%%BeginResource: font Courier-Elite
%%DocumentNeededResources: font Courier
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Courier-Elite
[ .833333333 0 0 1 0 0 ]
/Courier
MakeTransformedFont
%%EndResource
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/NewCenturySchlbk-Italic@0 ENC0/NewCenturySchlbk-Italic RE
/Courier-Elite-Bold@0 ENC0/Courier-Elite-Bold RE/Courier-Elite@0 ENC0
/Courier-Elite RE/NewCenturySchlbk-Roman@0 ENC0/NewCenturySchlbk-Roman
RE/NewCenturySchlbk-Bold@0 ENC0/NewCenturySchlbk-Bold RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
.48 LW 540 54 72 54 DL 540 56 72 56 DL/F0 12/NewCenturySchlbk-Bold@0 SF
(CMPS-109 \203 W)72 50 Q
(inter 2016 \203 Program 1 \203 Overloading and operators)-.216 E/F1 12
/NewCenturySchlbk-Roman@0 SF 3.336(1o)25.512 G 3.336(f4)-3.336 G/F2 11
/Courier-Elite@0 SF
($Id: asg2-dc-bigint.mm,v 1.82 2015-12-11 17:08:59-08 - - $)72 67 Q
(PWD: /afs/cats.ucsc.edu/users/r/wmossman/private/cmps109/asg1)72 80 Q(\
URL: No URL for /afs/cats.ucsc.edu/users/r/wmossman/private/cmps109/asg\
1)72 93 Q F0 3.444(1. Overview)72 117 R F1 1.951(This assignment will i\
nvolve overloading basic integer operators to perform arbi-)72 137 R
.729(trary precision integer arithmetic in the style of)72 151 R/F3 12
/Courier-Elite-Bold@0 SF(dc)4.065 E F1 4.065(\(1\). Y)B .729(our c)-1.2
F(lass)-.084 E F3(bigint)4.066 E F1 .73(will inter)4.066 F(-)-.444 E
(mix arbitrarily with simple integer arithmetic)72 165 Q(.)-.216 E 1.32
-.66(To b)72 185 T(egin read the).66 E F3(man)3.336 E F1
(\(1\) page for the command)A F3(dc)3.336 E F1 -1.336(\(1\) :)B F3
(man -s 1 dc)85.5 199 Q F1 3.988(Ac)72 213 S .652
(opy of that page is also in this directory)-3.988 F 7.324(.Y)-1.5 G
.651(our program will use the standard)-8.524 F F3(dc)3.987 E F1 2.35
(as a reference)72 227 R 2.35
(implemention and must produce exactly the same output for the)9.022 F
(commands you ha)72 241 Q(ve to implement)-.12 E(:)2 E F3 12
(+-*/%\000cdfpq)85.5 255 S F1 .744(Also look in the subdirectory)72 275
R F3(misc/)4.08 E F1 .744(for some examples and in)4.08 F F3(output/)
4.08 E F1 .744(for the result)4.08 F(of running the test data using)72
289 Q F3(dc)3.336 E F1(.)A F0 3.444(2. Implementation)72 315 R(strategy)
3.444 E F1(As before)72 335 Q 3.336(,y)-.216 G(ou ha)-3.336 E
(ve been given starter code)-.12 E(.)-.216 E(\(a\))81.336 355 Q F3
(Makefile)6 E F1(,)A F3(trace)5.101 E F1 5.101(,a)C(nd)-5.101 E F3
(general)5.102 E F1 1.766(If you \214nd you need a function whic)5.102 F
5.102(hd)-.084 G 1.766(oes not)-5.102 F
(properly belong to a given module)102 369 Q 3.336(,y)-.216 G(ou ma)
-3.336 E 3.336(ya)-.12 G(dd it to)-3.336 E F3(teneral)3.336 E F1(.)A
2.664(\(b\) The)81.336 389 R(module)3.652 E F3(scanner)3.652 E F1 .316
(reads in tokens)3.652 F 3.652(,n)-.3 G .316(amely a)-3.652 F F3(NUMBER)
3.652 E F1 3.652(,a)C(n)-3.652 E F3(OPERATOR)3.652 E F1 3.652(,o)C(r)
-3.652 E F3(SCANEOF)3.652 E F1(.)A(Eac)102 403 Q 5.259(ht)-.084 G 1.923
(oken returns a)-5.259 F F3(token_t)5.259 E F1 5.26(,w)C(hic)-5.26 E
5.26(hi)-.084 G 1.924(ndicates what kind of token it is \(the)-5.26 F F3
1.971(terminal_symbol symbol)102 417 R F1 1.971(\), and the)B F3 1.971
(string lexinfo)5.307 F F1 1.97(associated with the token.)5.307 F 1.016
(Only in the case of a number is there more than one c)102 431 R
(haracter)-.084 E 7.688(.N)-1.2 G 1.016(ote that on)-7.688 F 1.69
(input, an underscore \()102 445 R F3(_)A F1 5.026(\)i)C 1.69
(ndicates a negative number)-5.026 F 8.362(.T)-1.2 G 1.69
(he minus sign \()-8.362 F F3(-)A F1 5.026(\)i)C(s)-5.026 E 1.32
(reserved only as a binary operator)102 459 R 7.992(.T)-1.2 G 1.32
(he scanner also has de\214ned a couple of)-7.992 F F3(operator<<)102
473 Q F1(for printing out scanner results in)3.336 E F3(TRACE)3.336 E F1
(mode)3.336 E(.)-.216 E 2.664(\(c\) The)82.68 493 R .069(main program)
3.405 F F3(main.cpp)3.405 E F1 3.405(,h)C .069
(as been implemented for you.)-3.405 F -.66(Fo)6.741 G 3.405(rt).66 G
.069(he six binary)-3.405 F .623(arithmetic functions)102 507 R 3.959
(,t)-.3 G .623(he right operand is popped from the stac)-3.959 F .623
(k, then the left)-.084 F
(operand, then the result is pushed onto the stac)102 521 Q(k.)-.084 E
2.664(\(d\) The)81.12 541 R(module)4.077 E F3(iterstack)4.077 E F1 .741
(can not just be the STL)4.077 F F3(stack)4.076 E F1 4.076(,s)C .74
(ince we w)-4.076 F .74(ant to iterate)-.216 F 2.428
(from top to bottom, and the STL)102 555 R F3(stack)5.764 E F1 2.428
(does not ha)5.764 F 2.429(ve an iterator)-.12 F 9.101(.A)-1.2 G(stac)
-3.336 E(k)-.084 E .376(depends on the operations)102 569 R F3(back\(\))
3.712 E F1(,)A F3(push_back\(\))3.712 E F1 3.712(,a)C(nd)-3.712 E F3
(pop_back\(\))3.711 E F1 .375(in the underly-)3.711 F .004
(ing container)102 583 R 6.677(.W)-1.2 G 3.341(ec)-7.397 G .005
(ould use a)-3.341 F F3(vector)3.341 E F1 3.341(,a)C F3(deque)A F1 3.341
(,o)C 3.341(rj)-3.341 G .005(ust a)-3.341 F F3(list)3.341 E F1 3.341(,a)
C 3.341(sl)-3.341 G .005(ong as the req-)-3.341 F
(uisite operations are a)102 597 Q(vailable)-.12 E(.)-.216 E F0 3.444
(3. Class)72 623 R F3(bigint)3.444 E F1 .335
(Then we come to the most complex part of the assignment, namely the c)
72 643 R(lass)-.084 E F3(bigint)3.671 E F1(.)A(Operators in this c)72
657 Q(lass are hea)-.084 E(vily overloaded.)-.12 E 2.664(\(a\) Most)
81.336 677 R .833(of the functions take a arguments of type)4.169 F F3
.834(const bigint&)4.17 F F1 4.17(,i)C(.e)-4.17 E .834(., a constant)
-.216 F(reference)102 691 Q 5.871(,f)-.216 G 2.535
(or the sake of ef\214ciency)-5.871 F 9.207(.B)-1.5 G 2.535(ut they ha)
-9.207 F 2.534(ve to return the result by)-.12 F(value)102 705 Q(.)-.216
E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
.48 LW 540 54 72 54 DL 540 56 72 56 DL/F0 12/NewCenturySchlbk-Bold@0 SF
(CMPS-109 \203 W)72 50 Q
(inter 2016 \203 Program 1 \203 Overloading and operators)-.216 E/F1 12
/NewCenturySchlbk-Roman@0 SF 3.336(2o)25.512 G 3.336(f4)-3.336 G 2.664
(\(b\) The)81.336 74 R/F2 12/Courier-Elite-Bold@0 SF(operator<<)4.601 E
F1 1.265(can't be a member since its left operand is an)4.601 F F2
(ostream)4.601 E F1 4.602(,s)C 4.602(ow)-4.602 G(e)-4.602 E .074
(make it a)102 88 R F2(friend)3.41 E F1 3.41(,s)C 3.41(ot)-3.41 G .073
(hat it can see the innards of a)-3.41 F F2(bigint)3.409 E F1 6.745(.N)C
.073(ote now)-6.745 F F2(dc)3.409 E F1(prints)3.409 E
(really big numbers)102 102 Q(.)-.3 E 2.664(\(c\) The)82.68 122 R .608
(relational operators)3.944 F F2(==)3.944 E F1(and)3.945 E F2(<)3.945 E
F1 .609(are coded individually as member functions)3.945 F(.)-.3 E
(The others)102 136 Q(,)-.3 E F2(!=)3.336 E F1(,)A F2(<=)3.336 E F1(,)A
F2(>)3.336 E F1 3.336(,a)C(nd)-3.336 E F2(>=)3.336 E F1
(are de\214ned in terms of the essential two)3.336 E(.)-.216 E 2.664
(\(d\) All)81.12 156 R .768(of the functions of)4.104 F F2(bigint)4.104
E F1 .768(only work with the sign, using)4.104 F F2(ubigint)4.104 E F1
.768(to do the)4.104 F 1.266(actual computations)102 170 R 7.939(.S)-.3
G(o)-7.939 E F2(bigint::operator+)4.603 E F1(and)4.603 E F2
(bigint::operator-)4.603 E F1 1.267(will c)4.603 F(hec)-.084 E(k)-.084 E
.509(the signs of the two operands then call)102 184 R F2
(ubigint::operator+)3.845 E F1(or)3.844 E F2(ubigint::opera-)3.844 E
(tor-)102 198 Q F1 5.604(,a)C 5.604(sa)-5.604 G(ppropriate)-5.604 E
5.604(,d)-.216 G 2.268(epending on the relative signs and magnitudes)
-5.604 F 8.94(.T)-.3 G(he)-8.94 E .665
(multiplication and division operators just call the corresponding)102
212 R F2(ubigint)4.001 E F1(oper)4.001 E(-)-.444 E(ators)102 226 Q 3.336
(,t)-.3 G(hen adjust the resulting sign according to the rule of signs)
-3.336 E(.)-.3 E F0 3.444(4. Class)72 252 R F2(ubigint)3.444 E F1(Class)
72 272 Q F2(ubigint)4.442 E F1 1.106
(implements unsigned large integers and is where the computational)4.442
F .1(work takes place)72 286 R 6.772(.C)-.216 G(lass)-6.772 E F2(bigint)
3.435 E F1 .099(takes care of the sign.)3.435 F .099
(Now we turn to the represen-)6.771 F(tation of a)72 300 Q F2(ubigint)
3.336 E F1 3.336(,w)C(hic)-3.336 E 3.336(hw)-.084 G
(ill be represented by vector of bytes)-3.336 E(.)-.3 E 2.664
(\(a\) Replace)81.336 320 R(the dec)3.336 E(laration)-.084 E F2
(using unumber = unsigned long;)115.5 334 Q(unumber uvalue {};)115.5 348
Q F1(with)102 362 Q F2(using udigit_t = unsigned char;)115.5 376 Q
(using ubigvalue_t = vector<udigit_t>;)115.5 390 Q
(ubigvalue_t ubig_value;)115.5 404 Q F1(in)102 418 Q F2(ubigint.h)3.336
E F1(.)A 2.664(\(b\) In)81.336 438 R .388(storing the big integer)3.724
F 3.724(,e)-1.2 G(ac)-3.724 E 3.724(hd)-.084 G .388
(igit is kept as a number in the range 0 to 9 in)-3.724 F 2.672
(an element of the vector)102 452 R 9.344(.S)-1.2 G 2.671
(ince the arithmetic operators add and subtract)-9.344 F .292(work from\
 least signi\214cant digit to most signi\214cant digit, store the eleme\
nts of)102 466 R .588(the vector in the same order)102 480 R 7.26(.T)
-1.2 G .588(hat means)-7.26 F 3.924(,f)-.3 G .588(or example)-3.924 F
3.924(,t)-.216 G .588(hat the number 4629)-3.924 F .767
(would be stored in a vector)102 494 R/F3 12/NewCenturySchlbk-Italic@0
SF(v)4.332 E F1 -1.336(as :)4.104 F F3(v)7.668 E/F4 8.4
/NewCenturySchlbk-Roman@0 SF(3)2.4 I/F5 12/Symbol SF(=)3.96 -2.4 M F1
(4,)3.36 E F3(v)4.332 E F4(2)2.4 I F5(=)3.96 -2.4 M F1(6,)3.36 E F3(v)
4.332 E F4(1)2.4 I F5(=)3.96 -2.4 M F1(2,)3.36 E F3(v)4.332 E F4(0)2.4 I
F5(=)3.96 -2.4 M F1 4.104(9. In)3.36 F .768(other words)4.104 F(,)-.3 E
(if a digit')102 509.031 Q 3.336(sv)-.3 G(alue is)-3.336 E F3(d)3.912 E
F1 2.64<d731>2.928 G(0)-2.64 E/F6 8.4/NewCenturySchlbk-Italic@0 SF(k).42
-5.04 M F1 3.336(,t).6 5.04 O(hen)-3.336 E F3(v)3.564 E F6(k).42 2.4 M
F5(=)3.96 -2.4 M F3(d)3.936 E F1(.).288 E 2.664(\(c\) In)82.68 529.031 R
2.745(order for the comparisons to work correctly)6.081 F 6.081(,a)-1.5
G(lw)-6.081 E -.12(ay)-.216 G 6.081(ss).12 G 2.745(tore numbers in a)
-6.081 F 1.609(canonical form)102 543.031 R 8.281(:A)2 G 1.609
(fter computing a value from any one of the six arithmetic)-8.281 F
(operators)102 557.031 Q 3.336(,a)-.3 G(lw)-3.336 E -.12(ay)-.216 G
3.336(st).12 G(rim the vector by removing all high-order zeros)-3.336 E
(:)2 E F2(while \(size\(\) > 0 and back\(\) == 0\) pop_back\(\);)115.5
571.031 Q F1(Zero should be represented as a vector of zero length and \
a positive sign.)102 585.031 Q 2.664(\(d\) The)81.12 605.031 R .046
(scanner will produce numbers as)3.382 F F2(string)3.381 E F1 .645 -.3
(s, s)D 3.381(os).3 G .045(can eac)-3.381 F 3.381(hs)-.084 G .045
(tring from the end)-3.381 F .469(of the string)102 619.031 R 3.805(,u)
-.3 G .469(sing a)-3.805 F F2(const_reverse_iterator)3.805 E F1 .469
(\(or other means\) from the end of)3.805 F 1.201(the string \(least si\
gni\214cant digit\) to the beginning of the string \(most signi\214-)102
633.031 R(cant digit\) using)102 647.031 Q F2(push_back)3.336 E F1
(to append them to the vector)3.336 E(.)-1.2 E F0 3.444
(5. Implementation)72 673.031 R(of Operators)3.444 E F1 2.664(\(a\) F)
81.336 693.031 R(or)-.66 E F2(bigint::operator+)4.663 E F1 4.663(,c)C
(hec)-4.747 E 4.663(kt)-.084 G 4.663(os)-4.663 G 1.327
(ee if the signs are the same or different.)-4.663 F(If)8 E .588
(the same)102 707.031 R 3.924(,c)-.216 G(all)-3.924 E F2
(ubigint::operator+)3.924 E F1 .588
(to compute the sum, and set the result sign)3.924 F 3.062
(as appopriate)102 721.031 R 9.734(.I)-.216 G 6.398(ft)-9.734 G 3.062
(he signs are different, call)-6.398 F F2(ubigint::operator-)6.399 E F1
3.063(with the)6.399 F .061
(larger number \214rst and the smaller number second.)102 735.031 R .061
(The sign is the sign of the)6.733 F 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
.48 LW 540 54 72 54 DL 540 56 72 56 DL/F0 12/NewCenturySchlbk-Bold@0 SF
(CMPS-109 \203 W)72 50 Q
(inter 2016 \203 Program 1 \203 Overloading and operators)-.216 E/F1 12
/NewCenturySchlbk-Roman@0 SF 3.336(3o)25.512 G 3.336(f4)-3.336 G
(larger number)102 74 Q(.)-1.2 E 2.664(\(b\) The)81.336 94 R(operator)
3.951 E/F2 12/Courier-Elite-Bold@0 SF(bigint::operator-)3.951 E F1 .615
(should perform similarly)3.951 F 7.288(.I)-1.5 G 3.952(ft)-7.288 G .616
(he signs are dif-)-3.952 F(ferent, it uses)102 108 Q F2
(ubigint::operator+)3.336 E F1(but if the same)3.336 E 3.336(,i)-.216 G
3.336(tu)-3.336 G(ses)-3.336 E F2(ubigint::operator-)3.336 E F1(.)A
2.664(\(c\) T)82.68 128 R 4.089(oi)-.66 G(mplement)-4.089 E F2
(ubigint::operator+)4.089 E F1 4.089(,c)C .753(reate a new)-4.089 F F2
(ubigint)4.088 E F1 .752(and proceed from the)4.088 F 1.116
(low order end to the high order end, adding digits pairwise)102 142 R
7.788(.F)-.216 G 1.116(or any sum >=)-8.448 F 1.027
(10, take the remainder and add the carry to the next digit.)102 156 R
(Use)7.699 E F2(push_back)4.362 E F1(to)4.362 E 2.934
(append the new digits to the)102 170 R F2(ubigint)6.27 E F1 9.606(.W)C
2.934(hen you run out of digits in the)-9.606 F 2.224(shorter number)102
184 R 5.56(,c)-1.2 G(ontinue)-5.56 E 5.56(,m)-.216 G(atc)-5.56 E 2.223
(hing the longer vector with zeros)-.084 F 5.559(,u)-.3 G 2.223
(ntil it is)-5.559 F(done)102 198 Q 6.672(.M)-.216 G
(ake sure the sign of 0 is positive)-6.672 E(.)-.216 E 2.664(\(d\) T)
81.12 218 R 5.908(oi)-.66 G(mplement)-5.908 E F2(ubigint::operator-)
5.908 E F1 5.908(,a)C 2.572(lso create a new empty vector)-5.908 F 5.908
(,s)-1.2 G(tarting)-5.908 E 1.199
(from the low order end and continuing until the high end.)102 232 R
1.198(If the left digit is)7.87 F 1.977
(smaller than the right digit, the subtraction will be less than zero)
102 246 R 8.65(.I)-.216 G 5.314(nt)-8.65 G(hat)-5.314 E(case)102 260 Q
4.093(,a)-.216 G .757
(dd 10 to the digit, and set the borrow to the next digit to \2551.)
-4.093 F .756(After the)7.428 F .63(algorithm is done)102 274 R(,)-.216
E F2(pop_back)3.966 E F1 .63
(all high order zeros from the vector before return-)3.966 F(ing it.)102
288 Q(Make sure the sign of 0 is positive)6.672 E(.)-.216 E 2.664
(\(e\) T)82.008 308 R 6.473(oi)-.66 G(mplement)-6.473 E F2(operator==)
6.473 E F1 6.473(,c)C(hec)-6.557 E 6.473(kt)-.084 G 6.473(os)-6.473 G
3.136(ee if the signs are the same and the)-6.473 F .715
(lengths of the vectors are the same)102 322 R 7.387(.I)-.216 G 4.051
(fn)-7.387 G .716(ot, return false)-4.051 F 7.388(.O)-.216 G .716
(therwise run down)-7.388 F .981
(both vectors and return false as soon a difference is found.)102 336 R
.981(Otherwise return)7.653 F(true)102 350 Q(.)-.216 E 2.664(\(f\) T)
84.012 370 R 3.422(oi)-.66 G(mplement)-3.422 E F2(operator<)3.422 E F1
3.422(,r)C .086(emember that a negative number is less than a posi-)
-3.422 F .057(tive number)102 384 R 6.729(.I)-1.2 G 3.393(ft)-6.729 G
.057(he signs are the same)-3.393 F 3.393(,f)-.216 G .056
(or positive numbers)-3.393 F 3.392(,t)-.3 G .056(he shorter one is)
-3.392 F(less)102 398 Q 3.73(,a)-.3 G .394(nd for negative nubmers)-3.73
F 3.73(,t)-.3 G .394(he longer one is less)-3.73 F 7.066(.I)-.3 G 3.731
(ft)-7.066 G .395(he signs and lengths)-3.731 F .25(are the same)102 412
R 3.586(,r)-.216 G .25
(un down the parallel vectors from the high order end to the low)-3.586
F .598(order end.)102 426 R .598
(When a difference is found, return true or false)7.27 F 3.934(,a)-.216
G 3.935(sa)-3.934 G(ppropriate)-3.935 E 7.271(.I)-.216 G(f)-7.271 E
(no difference is found, return false)102 440 Q(.)-.216 E 2.664
(\(g\) Implement)81.564 460 R(function)4.634 E F2(bigint::operator*)
4.634 E F1 4.633(,w)C(hic)-4.633 E 4.633(hu)-.084 G 1.297
(ses the rule of signs to deter)-4.633 F(-)-.444 E 2.006
(mine the result.)102 474 R 2.007(The number crunc)8.678 F 2.007
(hing is delegated to)-.084 F F2(ubigint::operator*)5.343 E F1(,)A(whic)
102 488 Q 3.336(hp)-.084 G(roduces the unsigned result.)-3.336 E 2.664
(\(h\) Multiplication)80.676 508 R(in)7.638 E F2(ubigint::operator*)
7.638 E F1 4.302(proceeds by allocating a new vector)7.638 F .471
(whose size is equal to the sum of the sizes of the other two operands)
102 522 R 7.143(.I)-.3 G(f)-7.143 E F0(u)3.807 E F1 .471(is a)3.807 F
1.162(vector of size)102 536 R/F3 12/NewCenturySchlbk-Italic@0 SF(m)4.93
E F1(and)4.51 E F0(v)4.498 E F1 1.162(is a vector of size)4.498 F F3(n)
4.93 E F1 4.498(,t).012 G 1.162(hen in)-4.498 F F3(O)4.618 E F1(\().12 E
F3(mn).432 E F1 4.498(\)s).012 G 1.161(peed, perform an)-4.498 F 2.684(\
outer loop over one argument and an inner loop over the other argument,)
102 550 R .933(adding the new partial products to the product)102 564 R
F0(p)4.269 E F1 .932(as you would by hand.)4.268 F(The)7.604 E
(algorithm can be described mathematically as follows)102 578 Q(:)2 E F0
(p)132 598 Q/F4 12/Symbol SF 3.36<ac46>3.36 G F0(for)132 612 Q F3(i)
6.972 E F4<ce>4.32 E F1([0,)2.4 E F3(m)2.472 E F1 3.36(\):).012 G F3(c)
156.576 626 Q F4<ac>3.36 E F1(0)3.36 E F0(for)156 640 Q F3(j)9.312 E F4
<ce>4.956 E F1([0,)2.4 E F3(n)2.472 E F1 3.36(\):).012 G F3(d)180.576
654 Q F4<ac>3.648 E F0(p)3.36 E/F5 8.4/NewCenturySchlbk-Italic@0 SF(i)
.176 2.88 M/F6 8.4/Symbol SF(+)A F5(j)1.814 E F4(+)3.685 -2.88 M F0(u)
2.64 E F5(i).176 2.4 M F0(v).6 -2.4 M F5(j)1.814 2.4 M F4(+)3.685 -2.4 M
F3(c)3.216 E F0(p)180 668.402 Q F5(i).176 2.88 M F6(+)A F5(j)1.814 E F4
<ac>4.405 -2.88 M F3(d)3.936 E/F7 12/Courier-Elite@0 SF(%)2.928 E F1(10)
2.64 E F3(c)180.576 682.804 Q F4<ac>3.36 E<eb>3.36 1.98 M F3 2.928<64f7>
.576 -1.98 O F1(10)-.288 E F4<fb>1.98 I F0(p)156 696.804 Q F5(i).176
2.88 M F6(+)A F5(n).302 E F4<ac>3.968 -2.88 M F3(c)3.936 E F1 1.105
(Note that the interval [)102 716.804 R F3(a).576 E F1(,)A F3(b)2.256 E
F1 4.441(\)r)C 1.105(efers to the set {)-4.441 F F3(x).996 E F1(|).252 E
F3(a).576 E F4<a3>3.36 E F3(x)4.356 E F1(<)3.612 E F3(b)3.576 E F1 1.105
(}, i.e)B 1.105(., to a half-open)-.216 F 1.495(interval inc)102 730.804
R(luding)-.084 E F3(a)5.407 E F1 1.495(but exc)4.831 F(luding)-.084 E F3
(b)5.047 E F1 8.167(.I)C 4.831(nt)-8.167 G 1.495(he same w)-4.831 F -.12
(ay)-.216 G 4.831(,ap)-1.38 G 1.494(air of iterators in)-4.831 F
(C++ bound an interval.)102 744.804 Q 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
.48 LW 540 54 72 54 DL 540 56 72 56 DL/F0 12/NewCenturySchlbk-Bold@0 SF
(CMPS-109 \203 W)72 50 Q
(inter 2016 \203 Program 1 \203 Overloading and operators)-.216 E/F1 12
/NewCenturySchlbk-Roman@0 SF 3.336(4o)25.512 G 3.336(f4)-3.336 G 2.664
(\(i\) Long)84.228 74 R 3.773(division is complicated if done correctly)
7.109 F 10.445(.S)-1.5 G 3.773(ee a paper by P)-10.445 F 7.109(.B)-1.5 G
(rinc)-7.109 E(h)-.084 E .064(Hansen, `)102 88 R .063
(`Multiple-length division revisited)-.3 F 6.735(:A)2 G .063
(tour of the mine\214eld')-3.336 F(',)-.3 E/F2 12
/NewCenturySchlbk-Italic@0 SF(Software)3.399 E 4.535<8a50>102 102 S
1.199(ractice and Experience 24)-4.535 F F1 4.535(,\().072 G -.3(Ju)
-4.535 G 1.199(ne 1994\), 579\211601.).3 F 1.199(Algorithms 1 to 12 are)
7.871 F .722(on pages 13\21123, Note that in P)102 116 R .722
(ascal, arra)-.444 F 4.058(yb)-.12 G .721(ounds are part of the type)
-4.058 F 4.057(,w)-.216 G(hic)-4.057 E(h)-.084 E(is not true for)102 130
Q/F3 12/Courier-Elite-Bold@0 SF(vector)3.336 E F1 3.336(si)C 3.336(nC)
-3.336 G(++.)-3.336 E F3(multiple-length-division.pdf)102 144 Q
(http://brinch-hansen.net/papers/1994b.pdf)102 158 Q
(http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.14.5815)102 172
Q F1 2.664(\(j\) The)84.456 192 R(function)4.509 E F3(divide)4.509 E F1
1.174(as implemented uses the ancient Egyptian division algo-)4.509 F
1.102(rithm, whic)102 206 R 4.438(hi)-.084 G 4.438(ss)-4.438 G 1.102
(lower than Hansen')-4.438 F 4.438(sP)-.3 G 1.102
(ascal program, but is easier to under)-4.882 F(-)-.444 E 4.849
(stand. Replace)102 220 R(the)4.849 E F3(long)4.849 E F1 1.513
(values in it by)4.849 F F3(vector<digit_t>)4.849 E F1 8.185(.T)C 1.513
(he logic is shown)-8.185 F 3.053(also in)102 234 R F3
(misc/divisioncpp.cpp)6.389 E F1 9.725(.T)C 3.053
(he algorithm is rather slow)-9.725 F 6.389(,b)-1.5 G 3.052(ut the big-)
-6.389 F F2(O).12 E F1(analysis is reasonable)102 248 Q(.)-.216 E 2.664
(\(k\) Modify)80.892 268 R F3(operator<<)4.354 E F1 4.354<2c8c>C 1.018
(rst just to print out the number all in one line)-4.354 F 7.691(.Y)
-.216 G 1.019(ou will)-8.891 F .767(need this to debug your program.)102
282 R .767(When you are \214nished, make it print num-)7.439 F
(bers in the same w)102 296 Q .24 -.12(ay a)-.216 H(s).12 E F3(dc)3.336
E F1(\(1\) does)A(.)-.3 E 2.664(\(l\) The)84.228 316 R F3(pow)4.974 E F1
1.639(function uses other operations to raise a number to a power)4.974
F 8.311(.I)-1.2 G 4.975(ft)-8.311 G(he)-4.975 E 1.33
(exponent does not \214t into a single)102 330 R F3(long)4.666 E F1 1.33
(print an error message)4.666 F 4.666(,o)-.216 G 1.33(therwise do)-4.666
F .014(the computation.)102 344 R .015
(The power function is not a member of either)6.686 F F3(bigint)3.351 E
F1(or)3.351 E F3(ubig-)3.351 E(int)102 358 Q F1 4.333(,a)C .997(nd is j\
ust considered a library function that is implemented using more)-4.333
F(primitive operations)102 372 Q(.)-.3 E F0 3.444(6. Memory)72 398 R
(leak)3.444 E F1 .205(Make sure that you test your program completely s\
o that it does not crash on a Seg-)72 418 R 1.577(mentation F)72 432 R
1.577(ault or any other unexpected error)-.78 F 8.249(.S)-1.2 G 1.577
(ince you are not using pointers)-8.249 F(,)-.3 E .006
(and all values are inline)72 446 R 3.342(,t)-.216 G .006
(here should be no memory leak.)-3.342 F(Use)6.679 E F3(valgrind)3.343 E
F1 .007(to c)3.343 F(hec)-.084 E 3.343(kf)-.084 G(or)-3.343 E
(and eliminate uninitialized variables and memory leak.)72 460 Q F0
3.444(7. What)72 486 R(to submit)3.444 E F1 1.723
(Submit source \214les and only source \214les)72 506 R(:)2 E F3
(Makefile)8.395 E F1(,)A F3(README)5.059 E F1 5.059(,a)C 1.722
(nd all of the header)-5.059 F .365
(and implementation \214les necessary to build the target executable)72
520 R 7.037(.I)-.216 G(f)-7.037 E F3(gmake)3.701 E F1 .365(does not)
3.701 F(build)72 534 Q F3(ydc)5.694 E F1 2.358
(your program can not be tested and you lose 1/2 of the points for the)
5.694 F 3.336(assignment. Use)72 548 R F3(checksource)3.336 E F1 3.336
(on your)3.336 F(code)3.336 E(.)-.216 E 1.256
(If you are doing pair programming)72 568 R 4.593(,f)-.3 G 1.257
(ollow the additional instructions in)-4.593 F F3(Syllabus/)4.593 E
(pair-programming/)72 582 Q F1(and also submit)3.336 E F3(PARTNER)3.336
E F1(.)A 0 Cg EP
%%Trailer
end
%%EOF
