head	1.3;
access;
symbols;
locks;
comment	@ * @;


1.3
date	2015.07.02.23.48.18;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.04.09.02.04.03;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.01.19.06.17.09;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@// $Id: scanner.h,v 1.2 2014-04-08 19:04:03-07 - - $

#ifndef __SCANNER_H__
#define __SCANNER_H__

#include <iostream>
#include <utility>
using namespace std;

#include "debug.h"

enum class tsymbol {SCANEOF, NUMBER, OPERATOR};
struct token_t {
   tsymbol symbol;
   string lexinfo;
};

class scanner {
   private:
      bool seen_eof;
      char lookahead;
      void advance();
   public:
      scanner();
      token_t scan();
};

ostream& operator<< (ostream&, const tsymbol&);
ostream& operator<< (ostream&, const token_t&);

#endif

@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: scanner.h,v 1.1 2011-01-18 22:17:09-08 - - $
d12 1
a12 1
enum terminal_symbol {NUMBER, OPERATOR, SCANEOF};
d14 1
a14 1
   terminal_symbol symbol;
d28 1
a28 1
ostream& operator<< (ostream&, const terminal_symbol&);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: scanner.h,v 1.1 2011-01-18 18:28:41-08 - - $
a7 1

d10 1
a10 1
#include "trace.h"
d25 1
a25 1
      token_t scan ();
d28 2
a29 2
ostream &operator<< (ostream &, const terminal_symbol &);
ostream &operator<< (ostream &, const token_t &);
@
